<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<program xmlns="http://www.kinoma.com/kpr/1">

    <require id="Analog" path="Analog" />
    <require id="HardwarepinsModule" path="HardwarepinsModule" />

    <container id="MainContainer" top="0" left="0" bottom="0" right="0">
        <skin color="white"/>
        <label name="info" string="' - - - '">
            <style font="78px Arial" color="black"/>
        </label>
        <behavior>
            <method id="onDisplayed" params="content">
                <![CDATA[
                    // create a new analog Input sensor object instance
                    var input = new Analog.Input( 59 );
                    
                    // initialize the sensor and start polling
                    input.init();
                    input.poll( 50, HardwarepinsModule.MILLISECONDS, "/analog/value" );
                ]]>
            </method>
            <method id="handleAnalogValueChanged" params="content, value">
                <![CDATA[
                    content.info.string = Math.round( value * 100);
                ]]>
            </method>
        </behavior>
    </container>

    <script>
        <![CDATA[
            // add the main container to the application
            application.add( new MainContainer() );
        ]]>
    </script>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- Handler that is called when polling the analog input state -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <handler path="/analog/value">
        <behavior>
            <method id="onInvoke" params="content, message">
                <![CDATA[
                    var data = message.requestObject;
                
                    // delegate the value changed event to the main container
                    if( data != null )
                        application.distribute( "handleAnalogValueChanged", data.value );
                ]]>
            </method>
        </behavior>
    </handler>
</program>
